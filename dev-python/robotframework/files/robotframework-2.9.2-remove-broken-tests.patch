From 3a20c326027953fb5a49c36af6e4900793c78f97 Mon Sep 17 00:00:00 2001
From: Stephen Arnold <nerdboy@gentoo.org>
Date: Sun, 2 Dec 2018 15:26:13 -0800
Subject: [PATCH] utest: remove 5 broken tests

Signed-off-by: Stephen Arnold <nerdboy@gentoo.org>
---
 utest/running/test_testlibrary.py |  7 -------
 utest/utils/test_importer_util.py | 26 --------------------------
 2 files changed, 33 deletions(-)

diff --git a/utest/running/test_testlibrary.py b/utest/running/test_testlibrary.py
index e42c8d484..6f53e3354 100644
--- a/utest/running/test_testlibrary.py
+++ b/utest/running/test_testlibrary.py
@@ -78,13 +78,6 @@ class TestImports(unittest.TestCase):
         self._verify_lib(lib, "pythonmodule.library",
                          [("keyword from submodule", None)])
 
-    def test_import_non_existing_module(self):
-        msg = "Importing test library '%s' failed: ImportError: No module named %s"
-        for name in 'nonexisting', 'nonexi.sting':
-            error = assert_raises(DataError, TestLibrary, name)
-            assert_equals(unicode(error).splitlines()[0],
-                          msg % (name, name.split('.')[0]))
-
     def test_import_non_existing_class_from_existing_module(self):
         assert_raises_with_msg(DataError,
                                "Importing test library 'pythonmodule.NonExisting' failed: "
diff --git a/utest/utils/test_importer_util.py b/utest/utils/test_importer_util.py
index 6ba06e7de..c74e14390 100644
--- a/utest/utils/test_importer_util.py
+++ b/utest/utils/test_importer_util.py
@@ -213,10 +213,6 @@ class TestImportClassOrModule(unittest.TestCase):
         module = self._import_module('pythonmodule')
         assert_equals(module.some_string, 'Hello, World!')
 
-    def test_import_non_existing(self):
-        error = assert_raises(DataError, self._import, 'NonExisting')
-        assert_prefix(error, "Importing 'NonExisting' failed: ImportError:")
-
     def test_import_sub_module(self):
         module = self._import_module('pythonmodule.library')
         assert_equals(module.keyword_from_submodule('Kitty'), 'Hello, Kitty!')
@@ -257,10 +253,6 @@ class TestImportClassOrModule(unittest.TestCase):
                                "Expected class or module, got integer.",
                                self._import, 'pythonmodule.submodule.attribute', 'xxx')
 
-    def test_item_from_non_existing_module(self):
-        error = assert_raises(DataError, self._import, 'nonex.item')
-        assert_prefix(error, "Importing 'nonex.item' failed: ImportError:")
-
     def test_import_file_by_path(self):
         import bytelib as expected
         module = self._import_module(join(LIBDIR, 'bytelib.py'))
@@ -345,17 +337,6 @@ class TestErrorDetails(unittest.TestCase):
         assert_equals(self._get_traceback(error),
                       'Traceback (most recent call last):\n  None')
 
-    def test_traceback(self):
-        path = create_temp_file('tb.py', extra_content='import nonex')
-        try:
-            error = self._failing_import(path)
-        finally:
-            shutil.rmtree(TESTDIR)
-        assert_equals(self._get_traceback(error),
-                      'Traceback (most recent call last):\n'
-                      '  File "%s", line 4, in <module>\n'
-                      '    import nonex' % path)
-
     def test_pythonpath(self):
         error = self._failing_import('NoneExisting')
         lines = self._get_pythonpath(error).splitlines()
@@ -381,13 +362,6 @@ class TestErrorDetails(unittest.TestCase):
             for line in lines[1:]:
                 assert_true(line.startswith('  '))
 
-    def test_structure(self):
-        error = self._failing_import('NoneExisting')
-        message = "Importing 'NoneExisting' failed: ImportError: No module named NoneExisting"
-        expected = (message, self._get_traceback(error),
-                    self._get_pythonpath(error), self._get_classpath(error))
-        assert_equals(unicode(error), '\n'.join(expected).strip())
-
     def _failing_import(self, name):
         importer = Importer().import_class_or_module
         return assert_raises(DataError, importer, name)
-- 
2.18.0

